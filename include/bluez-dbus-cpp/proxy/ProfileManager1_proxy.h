
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef _sdbuscpp_include_bluez_dbus_cpp_proxy_ProfileManager1_proxy_h_proxy_H_
#define _sdbuscpp_include_bluez_dbus_cpp_proxy_ProfileManager1_proxy_h_proxy_H_

#include <sdbus-c++/sdbus-c++.h>
#include <string>

namespace org::bluez {
    class ProfileManager1_proxy {
    public:
        static constexpr auto INTERFACE_NAME = "org.bluez.ProfileManager1";

    protected:
        explicit ProfileManager1_proxy(sdbus::IProxy &proxy)
            : proxy_(proxy) {
        }

        ~ProfileManager1_proxy() = default;

    public:
        void RegisterProfile(const sdbus::ObjectPath &profile, const std::string &UUID,
                             const std::map<std::string, sdbus::Variant> &options) const {
            proxy_.callMethod("RegisterProfile").onInterface(INTERFACE_NAME).withArguments(profile, UUID, options);
        }

        void UnregisterProfile(const sdbus::ObjectPath &profile) const {
            proxy_.callMethod("UnregisterProfile").onInterface(INTERFACE_NAME).withArguments(profile);
        }

    private:
        sdbus::IProxy &proxy_;
    };
}

#endif
